// <auto-generated />
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using PostgreSQLConfig;

#nullable disable

namespace PostgreSQLDb.Migrations
{
    [DbContext(typeof(EducationPageDbContext))]
    partial class EducationPageDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("EducationPageWebAPI.Models.Article", b =>
                {
                    b.Property<string>("ArticleId")
                        .HasColumnType("text");

                    b.Property<string>("Annotation")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("InThemePostionNumber")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ThemeId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("ArticleId");

                    b.ToTable("Articles");
                });

            modelBuilder.Entity("Models.Models.Tags", b =>
                {
                    b.Property<string>("TagId")
                        .HasColumnType("text");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("TagId");

                    b.ToTable("Tags");

                    b.HasData(
                        new
                        {
                            TagId = "c4e86988-5252-432d-97e4-84709e91b1e9",
                            Value = "акции"
                        },
                        new
                        {
                            TagId = "7566fcc3-7682-47a5-b006-cff520ceacb7",
                            Value = "облигации"
                        },
                        new
                        {
                            TagId = "fd2437cb-62ec-42c4-82f9-1866c30527b6",
                            Value = "фонды"
                        },
                        new
                        {
                            TagId = "8b202bfb-d2a8-4a20-9ac2-eb004f35f09c",
                            Value = "ETF"
                        },
                        new
                        {
                            TagId = "a9155ab2-ba76-486a-9779-a90a5b6f6ab4",
                            Value = "ТехАнализ"
                        },
                        new
                        {
                            TagId = "dd44442e-a4e2-4cab-893f-8923a6f2764b",
                            Value = "биржа"
                        },
                        new
                        {
                            TagId = "29f5cd84-6506-4f5c-b436-3acb8235f21f",
                            Value = "депозитарии"
                        });
                });

            modelBuilder.Entity("Models.Models.Theme", b =>
                {
                    b.Property<string>("ThemeId")
                        .HasColumnType("text");

                    b.Property<string>("ImagePath")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<List<string>>("TagsIds")
                        .IsRequired()
                        .HasColumnType("text[]");

                    b.HasKey("ThemeId");

                    b.ToTable("Themes");

                    b.HasData(
                        new
                        {
                            ThemeId = "1",
                            ImagePath = "/images/Stocks.png",
                            Name = "Stocks",
                            TagsIds = new List<string> { "c4e86988-5252-432d-97e4-84709e91b1e9", "dd44442e-a4e2-4cab-893f-8923a6f2764b", "29f5cd84-6506-4f5c-b436-3acb8235f21f" }
                        },
                        new
                        {
                            ThemeId = "2",
                            ImagePath = "/images/Bonds.png",
                            Name = "Bonds",
                            TagsIds = new List<string> { "c4e86988-5252-432d-97e4-84709e91b1e9", "7566fcc3-7682-47a5-b006-cff520ceacb7" }
                        },
                        new
                        {
                            ThemeId = "3",
                            ImagePath = "/images/Crypto.png",
                            Name = "Crypto",
                            TagsIds = new List<string> { "c4e86988-5252-432d-97e4-84709e91b1e9" }
                        },
                        new
                        {
                            ThemeId = "4",
                            ImagePath = "/images/ETF.png",
                            Name = "ETF",
                            TagsIds = new List<string> { "8b202bfb-d2a8-4a20-9ac2-eb004f35f09c", "fd2437cb-62ec-42c4-82f9-1866c30527b6" }
                        },
                        new
                        {
                            ThemeId = "5",
                            ImagePath = "/images/Goods.png",
                            Name = "Goods",
                            TagsIds = new List<string> { "c4e86988-5252-432d-97e4-84709e91b1e9" }
                        },
                        new
                        {
                            ThemeId = "6",
                            ImagePath = "/images/Forex.png",
                            Name = "Forex",
                            TagsIds = new List<string> { "c4e86988-5252-432d-97e4-84709e91b1e9" }
                        },
                        new
                        {
                            ThemeId = "7",
                            ImagePath = "/images/Futures.png",
                            Name = "Futures",
                            TagsIds = new List<string> { "c4e86988-5252-432d-97e4-84709e91b1e9" }
                        },
                        new
                        {
                            ThemeId = "8",
                            ImagePath = "/images/TechAnalysis.png",
                            Name = "TechAnalysis",
                            TagsIds = new List<string> { "a9155ab2-ba76-486a-9779-a90a5b6f6ab4" }
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
